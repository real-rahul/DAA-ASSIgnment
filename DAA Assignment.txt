1.Set Matrix Zeroes
class Solution(object):
    def setZeroes(self, matrix):
        n=len(matrix)
        m=len(matrix[0])
        col=1
        for i in range(n):
            for j in range(m):
                if matrix[i][j]==0:
                    matrix[i][0]=0
                    if(j!=0):
                        matrix[0][j]=0
                    else:
                        col=0
        for i in range(1,n):
            for j in range(1,m):
                if matrix[i][j]!=0:
                    if matrix[0][j]==0 or matrix[i][0]==0:
                        matrix[i][j]=0
        if matrix[0][0]==0:
            for j in range(m):
                matrix[0][j]=0
        if col==0:
            for i in range(n):
                matrix[i][0]=0
        return matrix
        

2.Pascal Triangle

class Solution(object):
    def generate(self, n):
        if n==1:
            return [[1]]
        res=[]
        res.append([1])
        for i in range(1,n):
            temp=[0]+res[-1]+[0]
            col=[]
            for j in range(len(temp)-1):
                col.append(temp[j]+temp[j+1])
            res.append(col)
        return res
       

3.Kadane's Algorithm

from os import *
from sys import *
from collections import *
from math import *

from sys import stdin,setrecursionlimit
setrecursionlimit(10**7)

def maxSubarraySum(arr, n) :
    sum=0
    maxi=0
    for i in range(n):
        sum=sum+arr[i]


        if sum>maxi:
            maxi=sum

        if sum<0:
            sum=0


    return maxi

4.Sort An Array of 0s, 1s and 2s 

from os import *
from sys import *
from collections import *
from math import *

def sortArray(arr, n):
	return arr.sort()

5.Find X raised to power N 

def myPow(x: float, n: int) -> float:
    return x**n

6.Majority Element 

def majorityElement(v: [int]) -> int:
    c=0
    c1=0
    ele=0
    for i in range(len(v)):
        if c==0:
            ele=v[i]
            c=1
        elif v[i]==ele:
            c+=1
        else:
            c-=1
    for i in range(len(v)):
        if v[i]==ele:
            c1+=1
    if c1>len(v)/2:
        return ele
    return -1


7.Majority Element
def majorityElement(v: [int]) -> [int]:
    l=[]
    n=len(v)
    
    for i in range(n):
        if v[i] not in l:
            x=v.count(v[i])
            if x>(n//3):
                l.append(v[i])


    return l

8.Majority Element 
def majorityElement(v: [int]) -> [int]:
    l=[]
    n=len(v)
    
    for i in range(n):
        if v[i] not in l:
            x=v.count(v[i])
            if x>(n//3):
                l.append(v[i])


    return l




